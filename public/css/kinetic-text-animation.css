#text-animation-container {
   position: absolute;
   left: 5em;
   width: 50%;
   height: auto;
}

.presentation-text-content {
    font-size: 4.5rem;
    width: 100%;
    line-height: 1.2;
    color: #333;
    text-align: left;
    display: none;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.5s ease, transform 0.5s ease;
}

.highlight {
    color: #00a8ff;
    position: relative;
}

.highlight::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 30%;
    background-color: rgba(0, 168, 255, 0.2);
    z-index: -1;
}

.presentation-text-content.visible {
    display: block;
    opacity: 1;
    transform: translateY(0);
}

/* Make only the first phrase visible initially */
.presentation-text-content.phrase1 {
    opacity: 1;
    transform: translateY(0);
}



/* Stagger the animation for each phrase */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}





/* Add kinetic text animation styles here */
@keyframes textWave {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

/* New kinetic text animations */
@keyframes textPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

@keyframes textRotate {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@keyframes textShake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
}

@keyframes textRainbow {
    0% { color: red; }
    14% { color: orange; }
    28% { color: yellow; }
    42% { color: green; }
    57% { color: blue; }
    71% { color: indigo; }
    85% { color: violet; }
    100% { color: red; }
}

@keyframes textShadow {
    0% { text-shadow: 0 0 0 rgba(0,0,0,0); }
    50% { text-shadow: 0 0 10px rgba(0,0,0,0.5); }
    100% { text-shadow: 0 0 0 rgba(0,0,0,0); }
}

/* New shape-focused kinetic text animations */
@keyframes textGrow {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.2); }
}

@keyframes textShrinkGrow {
    0%, 100% { transform: scale(1); }
    25% { transform: scale(0.8); }
    75% { transform: scale(1.2); }
}

@keyframes textSlideHorizontal {
    0%, 100% { transform: translateX(0); }
    50% { transform: translateX(20px); }
}

@keyframes textBounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-20px); }
    60% { transform: translateY(-10px); }
}

@keyframes textHighlight {
    0%, 100% { background-color: transparent; }
    50% { background-color: rgba(255, 255, 0, 0.5); } /* Yellow highlight */
}

@keyframes textColorShift {
    0%, 100% { color: #333; }
    50% { color: #00a8ff; }
}

@keyframes textFontChange {
    0%, 100% { font-family: Arial, sans-serif; font-weight: normal; }
    50% { font-family: "Times New Roman", serif; font-weight: bold; }
}

/* Additional kinetic text animations */
@keyframes textSlideVertical {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-20px); }
}

@keyframes textRiseAndFall {
    0%, 100% { transform: translateY(0); opacity: 1; }
    25% { transform: translateY(-30px); opacity: 0.7; }
    75% { transform: translateY(10px); opacity: 0.9; }
}

@keyframes textSlideInFromLeft {
    0% { transform: translateX(-100%); opacity: 0; }
    100% { transform: translateX(0); opacity: 1; }
}

@keyframes textSlideInFromRight {
    0% { transform: translateX(100%); opacity: 0; }
    100% { transform: translateX(0); opacity: 1; }
}

@keyframes textRiseWithFade {
    0% { transform: translateY(20px); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
}

@keyframes textFloatUpDown {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-15px); }
}

/* Additional kinetic typography effects */
@keyframes textTypewriter {
    from { width: 0; }
    to { width: 100%; }
}

@keyframes textScramble {
    0%, 100% { filter: blur(0px); }
    50% { filter: blur(4px); }
}

@keyframes textSplitAndJoin {
    0%, 100% { letter-spacing: normal; }
    50% { letter-spacing: 0.5em; }
}

@keyframes textWaveThrough {
    0% { transform: translateY(0) rotate(0deg); }
    25% { transform: translateY(-15px) rotate(-5deg); }
    50% { transform: translateY(0) rotate(0deg); }
    75% { transform: translateY(15px) rotate(5deg); }
    100% { transform: translateY(0) rotate(0deg); }
}

@keyframes textPerspectiveFlip {
    0%, 100% { transform: perspective(400px) rotateY(0); }
    50% { transform: perspective(400px) rotateY(180deg); }
}

@keyframes textElasticStretch {
    0%, 100% { transform: scaleX(1); }
    50% { transform: scaleX(1.2); }
}

@keyframes textGlitch {
    0%, 100% { transform: translate(0); }
    20% { transform: translate(-5px, 5px); }
    40% { transform: translate(5px, -5px); }
    60% { transform: translate(-5px, -5px); }
    80% { transform: translate(5px, 5px); }
}

/* Perspective and 3D effects for kinetic typography */
@keyframes text3DRotate {
    0% { transform: perspective(500px) rotateY(0deg); }
    100% { transform: perspective(500px) rotateY(360deg); }
}

@keyframes textFlipX {
    0%, 100% { transform: perspective(400px) rotateX(0deg); }
    50% { transform: perspective(400px) rotateX(180deg); }
}

@keyframes text3DWave {
    0%, 100% { transform: perspective(500px) rotateX(0deg) translateZ(0px); }
    50% { transform: perspective(500px) rotateX(30deg) translateZ(50px); }
}

@keyframes textDepthPulse {
    0%, 100% { transform: translateZ(0px); }
    50% { transform: translateZ(50px); }
}

@keyframes text3DCube {
    0% { transform: perspective(500px) rotateX(0deg) rotateY(0deg); }
    25% { transform: perspective(500px) rotateX(90deg) rotateY(0deg); }
    50% { transform: perspective(500px) rotateX(180deg) rotateY(0deg); }
    75% { transform: perspective(500px) rotateX(270deg) rotateY(0deg); }
    100% { transform: perspective(500px) rotateX(360deg) rotateY(0deg); }
}

@keyframes textSwingIn {
    0% { transform: perspective(500px) rotateY(90deg); opacity: 0; }
    100% { transform: perspective(500px) rotateY(0deg); opacity: 1; }
}

@keyframes text3DCarousel {
    0%, 100% { transform: perspective(500px) translateZ(0) rotateY(0); }
    25% { transform: perspective(500px) translateZ(100px) rotateY(45deg); }
    50% { transform: perspective(500px) translateZ(0) rotateY(90deg); }
    75% { transform: perspective(500px) translateZ(-100px) rotateY(45deg); }
}

/* Additional creative kinetic typography effects */
@keyframes textSliceReveal {
    0% { clip-path: inset(0 100% 0 0); }
    100% { clip-path: inset(0 0 0 0); }
}

@keyframes textRiseFromDistance {
    0% { transform: perspective(500px) translateZ(-300px) scale(0.5); opacity: 0; }
    100% { transform: perspective(500px) translateZ(0) scale(1); opacity: 1; }
}

@keyframes textCenterFocus {
    0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }
    100% { transform: translate(0, 0) scale(1); opacity: 1; }
}

@keyframes textGrowFade {
    0% { transform: scale(1); opacity: 1; }
    100% { transform: scale(2); opacity: 0; }
}

@keyframes textSplitJoin {
    0%, 100% { clip-path: inset(0 0 0 0); }
    50% { clip-path: inset(0 50% 0 0); }
}

@keyframes textLetterShuffle {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(10px); }
    75% { transform: translateX(-10px); }
}

@keyframes textMorphShape {
    0%, 100% { clip-path: circle(50% at 50% 50%); }
    50% { clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%); }
}

@keyframes textSpotlight {
    0%, 100% { text-shadow: 0 0 0 rgba(255,255,255,0); }
    50% { text-shadow: 0 0 10px rgba(255,255,255,1), 0 0 20px rgba(255,255,255,0.8); }
}

/* Text Wave Variants */
@keyframes textWave {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

@keyframes textWaveFast {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

@keyframes textWaveIntense {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-20px); }
}

/* Text Pulse Variants */
@keyframes textPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

@keyframes textPulseFast {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

@keyframes textPulseIntense {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.2); }
}

/* ... Add more variant keyframes for each effect ... */

/* Variant-specific styles */
[data-effect="textWaveFast"] { animation-duration: 1s; }
[data-effect="textPulseFast"] { animation-duration: 0.5s; }

/* ... Add more variant-specific styles as needed ... */

/* 1. Fade In/Out */
@keyframes textFadeInOut {
    0%, 100% { opacity: 0; }
    50% { opacity: 1; }
}

/* 2. Slide or Wipe */
@keyframes textSlideIn {
    from { transform: translateX(-100%); }
    to { transform: translateX(0); }
}

/* 3. Typewriter Effect */
@keyframes textTypewriter {
    from { width: 0; }
    to { width: 100%; }
}

/* 4. Scale or Zoom */
@keyframes textZoom {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.5); }
}

/* 5. Rotation */
@keyframes textRotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* 6. 3D Extrusion */
@keyframes text3DExtrude {
    0%, 100% { text-shadow: 0 0 0 #000; }
    50% { text-shadow: 5px 5px 0 #000; }
}

/* 7. Morphing */
@keyframes textMorph {
    0%, 100% { font-weight: normal; font-style: normal; }
    50% { font-weight: bold; font-style: italic; }
}

/* 8. Bounce */
@keyframes textBounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-30px); }
    60% { transform: translateY(-15px); }
}

/* 9. Skew or Distort */
@keyframes textSkew {
    0%, 100% { transform: skew(0deg); }
    50% { transform: skew(20deg); }
}

/* 10. Glitch or Flicker */
@keyframes textGlitch {
    0%, 100% { transform: translate(0); }
    20% { transform: translate(-5px, 5px); }
    40% { transform: translate(5px, -5px); }
    60% { transform: translate(-5px, -5px); }
    80% { transform: translate(5px, 5px); }
}

/* 11. Tracking */
@keyframes textTracking {
    0%, 100% { letter-spacing: normal; }
    50% { letter-spacing: 0.5em; }
}

/* 12. Wave or Ripple */
@keyframes textWave {
    0%, 100% { transform: translateY(0); }
    25% { transform: translateY(-15px); }
    75% { transform: translateY(15px); }
}

/* 13. Path Animation */
@keyframes textPath {
    0% { offset-distance: 0%; }
    100% { offset-distance: 100%; }
}

/* 14. Color Shifting */
@keyframes textColorShift {
    0% { color: red; }
    33% { color: blue; }
    66% { color: green; }
    100% { color: red; }
}

/* 15. Opacity Flicker */
@keyframes textOpacityFlicker {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

/* 16. Blur or Focus */
@keyframes textBlurFocus {
    0%, 100% { filter: blur(0px); }
    50% { filter: blur(5px); }
}

/* 17. Liquid Motion */
@keyframes textLiquid {
    0%, 100% { border-radius: 0%; }
    50% { border-radius: 50%; }
}

/* 18. Parallax */
@keyframes textParallax {
    0% { transform: translateX(0); }
    100% { transform: translateX(50px); }
}

/* 19. Explosion or Particle Effect */
@keyframes textExplode {
    0% { letter-spacing: normal; opacity: 1; }
    100% { letter-spacing: 1em; opacity: 0; }
}

/* 20. Masking */
@keyframes textMask {
    0% { clip-path: inset(0 100% 0 0); }
    100% { clip-path: inset(0 0 0 0); }
}

/* 21. Text Shadow Animation */
@keyframes shadowMove {
    0% { text-shadow: 2px 2px 5px red; }
    100% { text-shadow: 5px 5px 10px blue; }
}

/* 22. CSS Clip Path Animation */
@keyframes textReveal {
    0% { clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); }
    100% { clip-path: polygon(50% 0, 100% 0, 100% 100%, 50% 100%); }
}

/* 23. CSS Keyframe Animation (Fade and Slide) */
@keyframes fadeSlide {
    0% { transform: translateY(100px); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
}

/* 24. Text Stroke Animation */
@keyframes textStroke {
    0% { -webkit-text-stroke: 0px black; }
    100% { -webkit-text-stroke: 2px black; }
}

/* 25. Hover Effects */
.hover-scale:hover {
    transform: scale(1.2);
    transition: transform 0.3s ease-in-out;
}

/* 26. Text Gradient Animation */
@keyframes gradientShift {
    0% { background-position: 0% 50%; }
    100% { background-position: 100% 50%; }
}

/* 27. CSS Transform: Rotate (already defined in #5) */

/* 28. CSS Blur Effect (similar to #16) */

/* 29. CSS Perspective and 3D Transform */
@keyframes rotate3D {
    0% { transform: perspective(400px) rotateX(0deg); }
    100% { transform: perspective(400px) rotateX(360deg); }
}

/* 30. Letter Spacing Animation (similar to #11) */

/* 31. Text Scroll Animation */
@keyframes textScroll {
    0% { transform: translateX(100%); }
    100% { transform: translateX(-100%); }
}

/* 32. Opacity and Color Flicker (combination of #14 and #15) */

/* 33. Elastic or Bounce (similar to #8) */

/* 34. Marquee Effect (similar to #31) */

/* 35. CSS Split Text Animation */
.split-text span {
    display: inline-block;
    opacity: 0;
    transform: translateY(20px);
    animation: splitTextReveal 0.5s forwards;
}

@keyframes splitTextReveal {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* 36. Ripple or Water Effect */
@keyframes textRipple {
    0%, 100% { transform: scale(1); filter: blur(0px); }
    50% { transform: scale(1.1); filter: blur(1px); }
}

/* 37. CSS Glitch Effect (similar to #10) */

/* Variant-specific styles */
[data-effect="textFadeInOut"] { animation: textFadeInOut 2s infinite; }
[data-effect="textSlideIn"] { animation: textSlideIn 2s forwards; }
[data-effect="textTypewriter"] { 
    overflow: hidden;
    white-space: nowrap;
    animation: textTypewriter 4s steps(40, end) forwards;
}
[data-effect="textZoom"] { animation: textZoom 2s infinite; }
[data-effect="textRotate"] { animation: textRotate 4s linear infinite; }
[data-effect="text3DExtrude"] { animation: text3DExtrude 2s infinite; }
[data-effect="textMorph"] { animation: textMorph 2s infinite; }
[data-effect="textBounce"] { animation: textBounce 2s infinite; }
[data-effect="textSkew"] { animation: textSkew 2s infinite; }
[data-effect="textGlitch"] { animation: textGlitch 0.5s infinite; }
[data-effect="textTracking"] { animation: textTracking 2s infinite; }
[data-effect="textWave"] { animation: textWave 2s infinite; }
[data-effect="textPath"] { 
    offset-path: path('M0,50 Q50,0 100,50 Q150,100 200,50');
    animation: textPath 5s linear infinite;
}
[data-effect="textColorShift"] { animation: textColorShift 3s infinite; }
[data-effect="textOpacityFlicker"] { animation: textOpacityFlicker 1s infinite; }
[data-effect="textBlurFocus"] { animation: textBlurFocus 2s infinite; }
[data-effect="textLiquid"] { animation: textLiquid 2s infinite; }
[data-effect="textParallax"] { animation: textParallax 2s infinite alternate; }
[data-effect="textExplode"] { animation: textExplode 2s forwards; }
[data-effect="textMask"] { animation: textMask 2s forwards; }
[data-effect="shadowMove"] { animation: shadowMove 2s infinite alternate; }
[data-effect="textStroke"] { animation: textStroke 2s infinite alternate; -webkit-text-stroke: 1px black; color: transparent; }
[data-effect="gradientShift"] { 
    background: linear-gradient(90deg, red, blue);
    -webkit-background-clip: text;
    color: transparent;
    animation: gradientShift 3s infinite linear;
    background-size: 200% 100%;
}
[data-effect="rotate3D"] { animation: rotate3D 3s infinite; }
[data-effect="textScroll"] { animation: textScroll 10s linear infinite; white-space: nowrap; }
[data-effect="fadeSlide"] { animation: fadeSlide 1s forwards; }
[data-effect="textReveal"] { animation: textReveal 1s forwards; }
[data-effect="textRipple"] { animation: textRipple 2s infinite; }

/* ... Add more variant-specific styles as needed ... */

/* Transition classes for phrases */
.phrase-enter {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.5s ease, transform 0.5s ease;
}

.phrase-enter-active {
    opacity: 1;
    transform: translateY(0);
}

.phrase-exit {
    opacity: 1;
    transform: translateY(0);
    transition: opacity 0.5s ease, transform 0.5s ease;
}

.phrase-exit-active {
    opacity: 0;
    transform: translateY(-20px);
}

/* Utility class to hide phrases */
.phrase-hidden {
    display: none;
}